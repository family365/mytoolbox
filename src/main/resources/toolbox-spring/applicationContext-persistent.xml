<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<bean id="BasicDataSource" class="com.alibaba.druid.pool.DruidDataSource" abstract="true">
		<property name="initialSize" value="1"/>
		<property name="minIdle" value="1"/>
		<property name="maxActive" value="20"/>
		
		<property name="maxWait" value="60000"/>
		
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		
		<property name="minEvictableIdleTimeMillis" value="300000"/>
		
		<property name="validationQuery" value="SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

		<property name="filters" value="stat" />
	</bean>
	
	
	<bean id="accountDB" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close" parent="BasicDataSource">
		<property name="url" value="${payAccount.url}" />
		<property name="username" value="${payAccount.username}" />
		<property name="password" value="${payAccount.password}" />
	</bean>

	<bean id="tradeDB" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close" parent="BasicDataSource">
		<property name="url" value="${payTrade.url}" />
		<property name="username" value="${payTrade.username}" />
		<property name="password" value="${payTrade.password}" />
	</bean>

	<bean id="multipleDataSource" class="cn.creditease.toolbox.datasource.MultipleDataSource">
		<property name="defaultTargetDataSource" ref="tradeDB" />
		<property name="targetDataSources">
			<map>
				<entry key="accountDB" value-ref="accountDB" />
				<entry key="tradeDB" value-ref="tradeDB" />
			</map>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multipleDataSource" />
	</bean>

	<!-- For fine-grain transaction, programmatic transaction -->
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:toolbox-mybatis-config/mybatis-sqlMapConfig.xml</value>
		</property>
		<property name="dataSource">
			<ref bean="multipleDataSource" />
		</property>
	</bean>

	<bean id="baseDao" class="org.mybatis.spring.support.SqlSessionDaoSupport"
		abstract="true">
		<property name="sqlSessionFactory">
			<ref bean="sqlSessionFactory" />
		</property>
	</bean>
</beans>
